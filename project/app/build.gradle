plugins {
    id 'com.android.application'
}

android {
    compileSdk project.compileSdkVersion

    defaultConfig {
        applicationId "tech.sud.mgp.hello"
        minSdk project.minSdkVersion
        targetSdk project.targetSdkVersion
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                def temNewFileName = "${variant.flavorName}-${project.baseUrlConfig}-${project.versionName}-${project.versionCode}-${variant.buildType.name}"
                // 修改apk名字
                outputFileName = "HelloSud-Android-" + temNewFileName + ".apk"
            }
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty("jksPropertyPath") && project.jksPropertyPath != "") {
                // release设置发布签名路径
                Properties properties = new Properties()
                properties.load(new FileInputStream(file(project.jksPropertyPath)))
                storeFile file(properties['STORE_FILE'])
                storePassword properties['STORE_PWD']
                keyAlias properties['KEY_ALIAS']
                keyPassword properties['KEY_PWD']
            } else {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
        debug {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    ndkVersion project.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'channel'
    productFlavors {
        official {
            applicationId "tech.sud.mgp.hello"
            manifestPlaceholders.put("mainAppName", "HelloSUD")
            String channel = "official"
            buildConfigField("String", "CHANNEL", "\"" + channel + "\"")
            buildConfigField("String", "baseUrlConfig", "\"" + project.baseUrlConfig + "\"")
            buildConfigField("String", "baseUrl", "\"" + project.baseUrl + "\"")
            buildConfigField("String", "interactBaseUrl", "\"" + project.interactBaseUrl + "\"")
            buildConfigField("String", "gameBaseUrl", "\"" + project.gameBaseUrl + "\"")
            buildConfigField("String", "buglyAppId", "\"" + project.buglyAppId + "\"")
            buildConfigField("boolean", "gameIsTestEnv", project.gameIsTestEnv)
            buildConfigField("String", "nftEnv", "\"" + project.nftEnv + "\"")
            buildConfigField("String", "mgpEnv", "\"" + project.mgpEnv + "\"")
            buildConfigField("boolean", "nftSwitch", "true")
        }
        oversea {
            applicationId "tech.sud.mgp.hello.oversea"
            manifestPlaceholders.put("mainAppName", "SUD Global")
            String channel = "oversea"
            buildConfigField("String", "CHANNEL", "\"" + channel + "\"")
            buildConfigField("String", "baseUrlConfig", "\"" + project.baseUrlConfig + "\"")
            buildConfigField("String", "baseUrl", "\"" + project.baseUrl + "\"")
            buildConfigField("String", "interactBaseUrl", "\"" + project.interactBaseUrl + "\"")
            buildConfigField("String", "gameBaseUrl", "\"" + project.gameBaseUrl + "\"")
            buildConfigField("String", "buglyAppId", "\"" + project.buglyAppId + "\"")
            buildConfigField("boolean", "gameIsTestEnv", project.gameIsTestEnv)
            buildConfigField("String", "nftEnv", "\"" + project.nftEnv + "\"")
            buildConfigField("String", "mgpEnv", "\"" + project.mgpEnv + "\"")
            buildConfigField("boolean", "nftSwitch", "false")
        }
    }

    // 声网同时集成RTM和RTC有一个库冲突，这里解决一下
    packagingOptions {
        pickFirst 'lib/x86/libaosl.so'
        pickFirst 'lib/x86_64/libaosl.so'
        pickFirst 'lib/armeabi-v7a/libaosl.so'
        pickFirst 'lib/arm64-v8a/libaosl.so'
    }

}

dependencies {

    implementation "androidx.appcompat:appcompat:${appcompatVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintlayoutVersion}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // 引入 SudMGPWrapper
    implementation project(':SudMGPWrapper')

    // 引入 SudASR
    implementation 'tech.sud.mgp:SudASR:1.4.7.1218'

    // 引入 SudNFT
    implementation project(':SudNFT:SudNFTSDK')

    // 引入 SudMGPRTC
    implementation project(':SudMGPRTC:SudMGPRtcAgora')
    implementation project(':SudMGPRTC:SudMGPRtcAliyun')
    implementation project(':SudMGPRTC:SudMGPRtcNetease')
    implementation project(':SudMGPRTC:SudMGPRtcRcloud')
    implementation project(':SudMGPRTC:SudMGPRtcTx')
    implementation project(':SudMGPRTC:SudMGPRtcVolc')
    implementation project(':SudMGPRTC:SudMGPRtcZego')
    implementation project(':SudMGPRTC:SudMGPIM')

    // 屏幕适配：https://github.com/JessYanCoding/AndroidAutoSize
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'

    // 腾讯bugly奔溃统计
    implementation 'com.tencent.bugly:crashreport:4.1.9'

    // 依赖okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'

    // 图片加载库
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    // 网络请求库
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.trello.rxlifecycle4:rxlifecycle:4.0.2'
    implementation 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.2'

    // RecyclerView的Adapter: https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.7'

    // recyclerview
    api 'androidx.recyclerview:recyclerview:1.2.1'

    // 增加mp4 sdk
    implementation 'com.github.bytedance:AlphaPlayer:1.2.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.6'
    // Android svga https://github.com/svga/SVGAPlayer-Android
    implementation 'com.github.yyued:SVGAPlayer-Android:2.6.1'
    // 播放json动画的库，网址为：https://github.com/airbnb/lottie-android
    implementation "com.airbnb.android:lottie:3.7.0"
    // Glide支持webp动图的库
    implementation "com.github.zjupure:webpdecoder:2.0.4.12.0"

    // 沉浸式状态栏
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'

    // 设置阴影颜色的控件:https://github.com/lihangleo2/ShadowLayout
    implementation 'com.github.lihangleo2:ShadowLayout:3.3.3'

    // 下拉刷新，核心库
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'

    // 下拉刷新，经典刷新头
    implementation 'com.scwang.smart:refresh-header-classics:2.0.3'

    // 工具类库: https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcodex:1.31.0'

    // 指示器：https://github.com/hackware1993/MagicIndicator
    implementation "com.github.hackware1993:MagicIndicator:1.7.0"

    // glide svg解析：https://github.com/qoqa/glide-svg
    implementation 'com.github.qoqa:glide-svg:4.0.2'

    // 事件通知
    implementation("org.greenrobot:eventbus:3.3.1")

}